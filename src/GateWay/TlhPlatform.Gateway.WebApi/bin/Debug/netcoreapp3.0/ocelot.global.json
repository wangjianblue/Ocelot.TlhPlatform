// 路由规则配置节点，数组形式
// 可配置多个路由协议和规则，实现路由、服务聚合、服务发现、认证、鉴权、限流、熔断、缓存、Header头传递等
// "Downstream是下游服务配置"
// "UpStream是上游服务配置"
// "Aggregates：服务聚合配置",
// "ServiceName",服务器名称
// "LoadBalancer", //需配合LoadBalancer节点进行路由负载均衡
// "UseServiceDiscovery：配置服务发现"
// "AuthenticationOptions：配置服务认证",
// "RouteClaimsRequirement：配置Claims鉴权"
// "RateLimitOptions：为限流配置",
// "LoadBalancerOptions: 负载均衡" //RoundRobin - 轮询，挨着来，雨露均沾 LeastConnection - 最小连接数，谁的任务最少谁来接客 NoLoadBalance - 不要负载均衡，让我一个人累死吧　　
// "FileCacheOptions：缓存配置"
// "QosOptions：服务质量与熔断",
// "DownstreamHeaderTransform：头信息转发": null,
{
  "DynamicReRoutes": [// 对某个服务限速
    //{
    //  "ServiceName": "orderService",
    //  "RateLimitRule": {
    //    "ClientWhitelist": [],
    //    "EnableRateLimiting": true,
    //    "Period": "1s",
    //    "PeriodTimespan": 1000.0,
    //    "Limit": 3
    //  }
    //}
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://127.0.0.1:8200",
    "RequestIdKey": "OcRequestId",
    "ServiceDiscoveryProvider": {
      "Host": "127.0.0.1", // Consul Service IP
      "Port": 8500, // Consul Service Port
      "Type": "Consul",
      "ConfigurationKey": "Oceolot_A"
    },
    "RateLimitOptions": {
      "DisableRateLimitHeaders": false, // Http头  X-Rate-Limit 和 Retry-After 是否禁用
      "QuotaExceededMessage": "Too many requests, are you OK?", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 999, // 当请求过载被截断时返回的http status
      "ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
    },
    "QoSOptions": {
      "ExceptionsAllowedBeforeBreaking": 2, //允许多少个异常请求
      "DurationOfBreak": 5000, //熔断的时间，单位为毫秒
      "TimeoutValue": 3000 //如果下游请求的处理时间超过多少则视如该请求超时
    },
    "HttpHandlerOptions": {
      "AllowAutoRedirect": false,
      "UseCookieContainer": false,
      "UseTracing": false
    },
    "LoadBalancerOptions": {
      "Type": "RoundRobin"
    },
    "DownstreamScheme": "http"
  },
  "Aggregates": [
    {
      "ReRouteKeys": [
        "order",
        "user"
      ],
      "UpstreamPathTemplate": "/GetOrderDetail/{values}"
    }
  ]
} 